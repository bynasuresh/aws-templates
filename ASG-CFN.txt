AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation Template to Auto Scaling group. 
Parameters:
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.small
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
Mappings:
  AWSInstanceType2Arch:
    t2.small:
      Arch: HVM64
  AWSRegionArch2AMI:
    us-east-1:
      HVM64: ami-09d3b3274b6c5d4aa
Resources:
  WebServerGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: !GetAZs ''
      LaunchConfigurationName: !Ref LaunchConfig
      MinSize: 2
      MaxSize: 5
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
        MaxBatchSize: 1
        PauseTime: PT15M
        WaitOnResourceSignals: true
  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      KeyName: !Ref KeyName
      ImageId: !FindInMap [AWSRegionArch2AMI, !Ref AWS::Region, !FindInMap [AWSInstanceType2Arch,
          !Ref InstanceType, Arch]]
      SecurityGroups: [!Ref InstanceSecurityGroup]
      InstanceType: !Ref InstanceType
      UserData: !Base64
        Fn::Join:
        #!/bin/bash -xe
		aws s3 cp s3://aws-s3bucket-mys3bucket-10oeu05s3hy2q/example.sh /home/ec2-user/example.sh
        chmod u+x 
	    ./example.sh        

			
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access and HTTP access on the configured port
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0