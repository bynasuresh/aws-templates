Description:  EC2 with IAM Role CloudFormation Sample Template

Parameters:
  Name:
    Type: String
    Default: Suresh

  EC2ImageId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-ebs
  
  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet ID where the EC2 Instance will be launched.

Resources:
  Ec2SsmIamRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument: 
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: ['sts:AssumeRole']
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      Policies:
       - PolicyName: s3-access-policy
         PolicyDocument:
          Version: '2012-10-17'
          Statement:
           Effect: Allow
           Action:
           - s3:PutObject
           - s3:GetObject
           - s3:ListBucket
           - s3:DeleteObject
           Resource: !Sub "arn:aws:s3:::aws-s3bucket-mys3bucket-10oeu05s3hy2q/*"
 
  Ec2SsmInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Path: /
      Roles: [!Ref Ec2SsmIamRole]

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: !Ref EC2ImageId
      IamInstanceProfile: !Ref Ec2SsmInstanceProfile
      SubnetId: !Ref SubnetId
      UserData:
          Fn::Base64: !Sub |
             aws s3 cp s3://aws-s3bucket-mys3bucket-10oeu05s3hy2q/example.sh /home/ec2-user/example.sh
             #!/bin/bash -xe
             chmod u+x example.sh
             ./example.sh
      Tags:
        - Key: Name
          Value: !Sub "${Name}-EC2Instance"
  AWSTemplateFormatVersion: "2010-09-09"          
          
          
          
          
          
